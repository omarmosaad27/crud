{"version":3,"sources":["components/Courseform/Courseform.js","components/courseList/CourseList.js","App.js","reportWebVitals.js","index.js"],"names":["Courseform","props","onSubmit","addcourse","required","type","placeholder","onChange","updateCourse","value","current","className","CourseList","state","Edited","renderCourse","detailes","name","onClick","toggleEdit","class","deleteCourse","index","setState","updateFormItem","e","preventDefault","editCourse","input","renderUpdateForm","ref","v","defaultValue","this","Fragment","Component","App","courses","target","push","length","splice","localStorage","getItem","JSON","parse","nextprops","nextstate","setItem","stringify","coursesList","map","course","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6fc483b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Courseform.css'\r\n\r\nconst Courseform = (props) => {\r\n\r\n\r\n    \r\n    return(\r\n        <form onSubmit={props.addcourse}>\r\n            <input required type=\"text\" placeholder=\"enter course name \" onChange={props.updateCourse} value={props.current}/>\r\n            <input type=\"submit\" value=\"add course \" className=\"btn\"/>\r\n        </form>\r\n    )\r\n}\r\nexport default Courseform","import React, {Component} from 'react'\r\nimport './CourseList.css'\r\n\r\nclass CourseList extends Component {\r\n    state = {\r\n        Edited : false\r\n    }\r\n    // course list\r\n    \r\n    renderCourse = () => {\r\n        return(\r\n                <li className=\"courselist\">\r\n                    <span>{this.props.detailes.name}</span>\r\n                    <button className=\"btn\" onClick={()=>{this.toggleEdit()}}>edit<i class=\"far fa-edit\"></i></button>\r\n                    <button className=\"btn-dark btn\" onClick={()=> this.props.deleteCourse(this.props.index)}>delete <i class=\"far fa-trash-alt\"></i></button>\r\n                    \r\n                </li>\r\n        )\r\n    }\r\n    // toggle edit state \r\n    toggleEdit = () => {\r\n        let {Edited} = this.state\r\n        this.setState({\r\n            Edited : !Edited\r\n        })\r\n    }\r\n    // updateFormItem\r\n    updateFormItem = (e) => {\r\n        e.preventDefault();\r\n        this.props.editCourse(this.props.index ,this.input.value )\r\n        this.toggleEdit()\r\n    }\r\n     // update from for editing \r\n        renderUpdateForm = () =>{\r\n            return(\r\n                <form onSubmit={this.updateFormItem}>\r\n                    <input type=\"text\" placeholder=\"update course name\" ref={(v) => {this.input = v}} defaultValue={this.props.detailes.name}/>\r\n                    <button className=\"btn\">update</button>\r\n                </form>\r\n            )\r\n    }\r\n    render(){\r\n        let {Edited} = this.state;\r\n        return(\r\n            <React.Fragment>\r\n                {Edited ? this.renderUpdateForm() :this.renderCourse()  }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseList;\r\n","import React, {Component} from 'react'\nimport Courseform from './components/Courseform/Courseform'\nimport CourseList from './components/courseList/CourseList'\n\nclass App extends Component {\n  state = {\n    courses:[\n      \n    ],\n    current:\"\"\n  }\n  componentDidMount(){\n    localStorage.getItem(\"allcourses\") && this.setState({\n      courses : JSON.parse(localStorage.getItem(\"allcourses\"))\n    })\n  }\n  updateCourse = (e) => {\n    this.setState({\n      current: e.target.value\n    })\n  }\n  addcourse = (e) => {\n    e.preventDefault();\n    let current = this.state.current;\n    let courses = this.state.courses;\n    courses.push({name:current})\n    this.setState({courses,\n      current:\"\"\n    })\n    // add to local storage\n    \n    \n    \n  }\n  componentDidUpdate(nextprops,nextstate){\n    localStorage.setItem(\"allcourses\",JSON.stringify(this.state.courses))\n  }\n  deleteCourse = (index) => {\n    let courses = this.state.courses;\n    let length = courses.length;\n\n    courses.splice(index,1)\n    this.setState({courses})\n  }\n  editCourse = (index,value) => {\n    let courses = this.state.courses;\n    let course = courses[index]\n    course[\"name\"] = value\n    this.setState({courses})\n  }\n  render(){\n    const courses = this.state.courses;\n    const coursesList = courses.map((course,index) => {\n        return <CourseList detailes={course} key={index} index={index} deleteCourse={this.deleteCourse} editCourse={this.editCourse} />\n    })\n    return(\n      <div className=\"App container\">\n        <h1>courses list</h1>\n        <Courseform updateCourse={this.updateCourse} addcourse={this.addcourse} current={this.state.current}/>\n        <ul>\n          {this.state.courses.length > 0 ? coursesList : <div className=\"message\">there are no courses to show</div>}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}